<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Menu</title>
    <link rel="stylesheet" href="css/menu.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://getbootstrap.com/docs/5.3/assets/css/docs.css" rel="stylesheet">
    <script defer src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body class="p-3 m-0 border-0 bd-example m-0 border-0">
    <%- include ('navbar') -%>
          <nav class="navbar navbar-light bg-light fixed-top p-2 mt-5">
            <div class="container-fluid d-flex justify-content-between align-items-center">
                <div class="dropdown">
                    <select id="category" class="form-select">
                        <%- categories.map((category)=> `<option value="${category.category}">${category.category}</option>`).join('') -%>
                    </select>
                </div>
                <button class="btn btn-danger" id="clear">Clear List</button>
            </div>
        </nav>

        <div class="row m-5 p-4 mt-5 pt-5">
            <%- items.map((item)=> `
                <div class="col-12 col-sm-4 mb-3">
                    <div class="card mx-auto">
                        <div class="card_image">
                            <img src="${item.image_url}" alt="Image of ${item.name}" class="card-img-top ">
                            <span class="card_price"><span>₹</span>${item.price_per_item}</span>
                        </div>
                        <div class="card_content card-body">
                            <h2 class="card-title">${item.name}</h2>
                            <div class="card-text">
                                <div class="card_details">
                                    <div>
                                        Availablity:
                                        <span>
                                            ${item.availablity === 1 ? 'Available' : 'Not Available'}
                                        </span>
                                    </div>
                                    <div>
                                        <button id="${item.name} add" value="${item.item_id}"> + </button>
                                        <div> QTY : </div>
                                        <div id="${item.item_id} qty">0</div>
                                        <button id="${item.name} sub" value="${item.item_id}"> - </button>
                                    </div>
                                </div>
                                <hr />
                                <p>
                                    ${item.description}
                                </p>
                            </div>
                            <div>
                                <button id="${item.name}" value="${item.item_id}">Add to list</button>
                            </div>
                        </div>
                    </div>
                </div>
                `).join('') -%>
        </div>
        </div>
        <script>
            let categorySelect = document.getElementById("category");
            let itemsOnPage =JSON.parse(`<%- JSON.stringify(items) %>`);
            let itemList = localStorage.getItem("itemList") ? new Map(Object.entries(JSON.parse(localStorage.getItem("itemList")))) : new Map();
            function listItemQty() {           
                if (itemList.size > 0) {
                    itemList.forEach((qty, id) => {
                        if(itemsOnPage.find((item) => item.item_id == id) === undefined) return;
                        document.getElementById(id + " qty").innerHTML = qty;
                    })
                }
            }
            listItemQty();
            categorySelect.addEventListener("change", async (event) => {
                let category = event.target.value;
                console.log(category);
                await fetch(`/menu/${category}`)
                    .then(response => response.json())
                    .then(data => {
                        let itemsContainer = document.getElementsByClassName("row")[0];
                        itemsOnPage = data.items;
                        itemsContainer.innerHTML = data.items.map((item) => `
                <div class="col-12 col-sm-4 mb-3">
                <div class="card mx-auto">
                    <div class="card_image">
                    <img src="${item.image_url}" alt="Image of ${item.name}" class="card-img-top ">
                    <span class="card_price"><span>₹</span>${item.price_per_item}</span>
                    </div>
                    <div class="card_content card-body">
                    <h2 class="card-title">${item.name}</h2>
                    <div class="card-text">
                        <div class="card_details">
                            <div>
                                Availablity: 
                                <span>
                                    ${item.availablity === 1 ? 'Available' : 'Not Available'}
                                 </span>
                            </div>
                            <div>
                                <button id="${item.name} add" value="${item.item_id}"> + </button>
                                <div> QTY : </div><div id="${item.item_id} qty">0</div>
                                <button id="${item.name} sub" value="${item.item_id}"> - </button> 
                            </div>
                        </div>
                        <hr/>
                        <p>
                            ${item.description}
                        </p>
                    </div>
                    <div>
                        <button id="${item.name}" value="${item.item_id}">Add to list</button>
                    </div>
                </div>
                </div>
                </div>
            `).join('');
                        listItemQty();
                        createList(data.items);
                    });
            });

            var itemsArray = JSON.parse(`<%- JSON.stringify(items) %>`);
            function createList(items) {
                items.forEach(item => {
                    let buttonList = document.getElementById(item.name);
                    let buttonQtyAdd = document.getElementById(item.name + " add");
                    let buttonQtySub = document.getElementById(item.name + " sub");
                    if (itemList.has(buttonList.value)) {
                        buttonList.innerHTML = "Remove from list";
                    }
                    else {
                        buttonList.innerHTML = "Add to list";
                    }
                    buttonList.addEventListener("click", () => {
                        let itemId = buttonList.value;
                        let itemQty = document.getElementById(itemId + " qty").innerHTML;
                        if (itemList.has(itemId)) {
                            buttonList.innerHTML = "Add to list";
                            itemList.delete(itemId);
                        }
                        else {
                            if (itemQty !== 0) {
                                buttonList.innerHTML = "Remove from list";
                                itemList.set(itemId, itemQty);
                            }
                            else {
                                alert("Quantity must be greater than 0");
                            }
                        }
                    })
                    buttonQtyAdd.addEventListener("click", () => {
                        let itemId = buttonQtyAdd.value;
                        let itemQty = document.getElementById(itemId + " qty").innerHTML;
                        itemQty++;
                        document.getElementById(itemId + " qty").innerHTML = itemQty;
                        if (itemList.has(itemId)) {
                            itemList.set(itemId, itemQty);
                        }
                    })
                    buttonQtySub.addEventListener("click", () => {
                        let itemId = buttonQtySub.value;
                        let itemQty = document.getElementById(itemId + " qty").innerHTML;
                        if (itemQty > 0) {
                            itemQty--;
                            document.getElementById(itemId + " qty").innerHTML = itemQty;
                            if (itemList.has(itemId)) {
                                if (itemQty === 0) {
                                    itemList.delete(itemId);
                                    document.getElementById(item.name).innerHTML = "Add to list";
                                }
                                else {
                                    itemList.set(itemId, itemQty);
                                }
                            }
                        }
                    })
                })
            }
            function mapToJson(map) {
                const jsonObj = {};
                for (const [key, value] of map) {
                    if (value instanceof Map) {
                        jsonObj[key] = mapToJson(value);
                    } else {
                        jsonObj[key] = value;
                    }
                }
                return JSON.stringify(jsonObj);
            }
            createList(itemsArray);
            let itemLink = document.getElementById("item-list");
            itemLink.addEventListener("click", () => {
                const itemListObj = mapToJson(itemList);
                localStorage.setItem("itemList", itemListObj);
            });

            let ordersLink = document.getElementById("orders-link");
            ordersLink.addEventListener("click", () => {
                const itemListObj = mapToJson(itemList);
                localStorage.setItem("itemList", itemListObj);
            });

            let adminLink = document.getElementById("admin-link");
            if (adminLink) {
                adminLink.addEventListener("click", () => {
                    const itemListObj = mapToJson(itemList);
                    localStorage.setItem("itemList", itemListObj);
                });
            }

            let chefLink = document.getElementById("chef-link");
            if (chefLink) {
                chefLink.addEventListener("click", () => {
                    const itemListObj = mapToJson(itemList);
                    localStorage.setItem("itemList", itemListObj);
                });
            }
            let clear = document.getElementById("clear");
            clear.addEventListener("click", () => {
                localStorage.clear();
                location.reload();
            }); 
        </script>
</body>

</html>
<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://getbootstrap.com/docs/5.3/assets/css/docs.css" rel="stylesheet">
    <script defer src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js"></script>
    <title>Document</title>
</head>

<body class="p-3 m-0 border-0 bd-example m-0 border-0">
    <%- include ('navbar') -%>
        <script>
            const itemList = localStorage.getItem("itemList");
            const itemListObj = JSON.parse(itemList);
            const itemListMap = new Map(Object.entries(itemListObj));
            let itemPriceList = {};
            let total = 0;
            const jsonString = JSON.stringify(itemListObj);
            const encoded = encodeURIComponent(jsonString);
            async function htmlAdder() {
                if (Object.keys(itemListObj).length > 0) {
                    await fetch(`/itemList/itempricelist/${encoded}`)
                        .then(response => response.json())
                        .then(data => {
                            itemPriceList = data.itemPriceList;
                            total = data.total
                        })
                        .catch(err => console.error(err));
                    createList(itemPriceList, total);
                }
                else {
                    innerHTML = `<div class="alert alert-warning mt-5">Add items to your list to view them here and place an order!</div>`
                    document.body.insertAdjacentHTML('beforeend', innerHTML);
                }
            }
            function createList(itemPriceList, total) {
                const innerHTML = `
            <div class="card w-75 p-3 mx-auto mt-5">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <h6>Items</h6>
                    <div>Price</div>
                </div>
                <ul id="item-lists" class="list-group list-group-flush">
                </ul>
                <h6 class="card-body">Total : Rs.${total}
                </h6>
                <label for="specifications">Special Instructions</label>
                <textarea id="specifications" placeholder="Enter your specifications here"></textarea>
                <label for="tableno">Table Number</label>
                <input type="number" id="tableno" placeholder="Enter your table number" required>
                <div class="card-body">
                    <button id="checkout">Checkout</button>
                </div>
            </div>
            `
                document.body.insertAdjacentHTML('beforeend', innerHTML);
                const list = document.getElementById("item-lists");
                itemPriceList.forEach((item) => {
                    const li = document.createElement('li');
                    li.classList.add("list-group-item", "d-flex", "justify-content-between", "align-items-center");
                    const h6 = document.createElement('h6');
                    h6.textContent = `${item.name}(${item.qty})`;
                    const div = document.createElement('div');
                    div.textContent = item.price;
                    li.appendChild(h6);
                    li.appendChild(div);
                    list.appendChild(li);
                });
                let checkout = document.getElementById("checkout");
                checkout.addEventListener("click", async () => {
                    let table = document.getElementById("tableno").value;
                    let spec = document.getElementById("specifications").value;
                    const tableAvailable = await checkTableStatus(table);
                    if (tableAvailable === true) {
                        const order = {
                            table_no: table,
                            specifications: spec,
                            ordered_time: new Date().toISOString().slice(0, 19).replace('T', ' '),
                            total_fare: total,
                            payment_status: 'pending'
                        }
                        await fetch('/itemList/order', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ order, itemListMap })
                        }).then(response => response.json())
                            .then(data => {
                                location.assign(data.redirectTo);
                            });

                    }
                    else {
                        alert("Table is not available. Check your table no. again");
                    }
                });

                let tableno = document.getElementById("tableno");
                tableno.addEventListener("change", async () => {
                    let table = document.getElementById("tableno").value;
                    let tableStatus = await checkTableStatus(table);
                    if (table !== "" && tableStatus === false) {
                        alert("Table is not available. Check your table no. again");
                    }
                });

                async function checkTableStatus(table) {
                    let tableStatus = false;
                    if (table === "") {
                        alert("Table number is required");
                    } else if (1 > table && table > 50) {
                        alert("Table number must be between 1 and 50");
                    } else {
                        tableStatus = await fetch(`/itemList/tablestatus/${table}`)
                            .then(response => response.json())
                            .then(data => {
                                return data.tableStatus;
                            });
                    }
                    return tableStatus;
                }

                async function htmlDecoder(htmlString) {
                    const textarea = document.createElement('textarea');
                    textarea.innerHTML = htmlString;
                    const decoded = textarea.value;
                    textarea.remove();
                    return decoded;
                }
            }
            htmlAdder();
        </script>
</body>

</html>